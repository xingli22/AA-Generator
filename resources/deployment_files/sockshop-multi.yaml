apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: carts-db
    name: carts-db
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: carts-db
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: carts-db
      spec:
        containers:
        - image: mongo
          imagePullPolicy: Always
          name: carts-db
          ports:
          - containerPort: 27017
            name: mongo
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: carts-db
    name: carts-db
    namespace: sockshop
  spec:
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: carts-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: carts
      version: v1
    name: carts-v1
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: carts
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: carts
          version: v1
      spec:
        serviceAccountName: sockshop-carts
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/carts:0.4.8
          imagePullPolicy: IfNotPresent
          name: carts
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: carts
      version: v2
    name: carts-v2
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: carts
        version: v2
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: carts
          version: v2
      spec:
        serviceAccountName: sockshop-carts
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/carts:0.4.8
          imagePullPolicy: IfNotPresent
          name: carts
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-carts
    labels:
      account: carts
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: carts
    name: carts
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: carts
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue-db
    name: catalogue-db
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: catalogue-db
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue-db
      spec:
        containers:
        - env:
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          - name: MYSQL_DATABASE
            value: socksdb
          image: weaveworksdemos/catalogue-db:0.3.0
          imagePullPolicy: IfNotPresent
          name: catalogue-db
          ports:
          - containerPort: 3306
            name: mysql
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue-db
    name: catalogue-db
    namespace: sockshop
  spec:
    ports:
    - port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      name: catalogue-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue
      version: v1
    name: catalogue-v1
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: catalogue
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue
          version: v1
      spec:
        serviceAccountName: sockshop-catalogue
        containers:
        - image: weaveworksdemos/catalogue:0.3.5
          imagePullPolicy: IfNotPresent
          name: catalogue
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue
      version: v2
    name: catalogue-v2
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: catalogue
        version: v2
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue
          version: v2
      spec:
        serviceAccountName: sockshop-catalogue
        containers:
        - image: weaveworksdemos/catalogue:0.3.5
          imagePullPolicy: IfNotPresent
          name: catalogue
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue
      version: v3
    name: catalogue-v3
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: catalogue
        version: v3
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: catalogue
          version: v3
      spec:
        serviceAccountName: sockshop-catalogue
        containers:
        - image: weaveworksdemos/catalogue:0.3.5
          imagePullPolicy: IfNotPresent
          name: catalogue
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-catalogue
    labels:
      account: catalogue
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: catalogue
    name: catalogue
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: catalogue
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: front-end
      version: v1
    name: front-end
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: front-end
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: front-end
      spec:
        serviceAccountName: sockshop-front-end
        containers:
        - image: weaveworksdemos/front-end:0.3.12
          imagePullPolicy: IfNotPresent
          name: front-end
          ports:
          - containerPort: 8079
            protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-front-end
    labels:
      account: front-end
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: front-end
    name: front-end
    namespace: sockshop
  spec:
    externalTrafficPolicy: Cluster
    ports:
    - nodePort: 30010
      port: 80
      protocol: TCP
      targetPort: 8079
    selector:
      name: front-end
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders-db
    name: orders-db
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders-db
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders-db
      spec:
        containers:
        - image: mongo
          imagePullPolicy: Always
          name: orders-db
          ports:
          - containerPort: 27017
            name: mongo
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: orders-db
    name: orders-db
    namespace: sockshop
  spec:
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: orders-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders
      version: v1
    name: orders-v1
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
          version: v1
      spec:
        serviceAccountName: sockshop-orders
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/orders:0.4.7
          imagePullPolicy: IfNotPresent
          name: orders
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders
      version: v2
    name: orders-v2
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders
        version: v2
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
          version: v2
      spec:
        serviceAccountName: sockshop-orders
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/orders:0.4.7
          imagePullPolicy: IfNotPresent
          name: orders
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders
      version: v3
    name: orders-v3
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders
        version: v3
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
          version: v3
      spec:
        serviceAccountName: sockshop-orders
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/orders:0.4.7
          imagePullPolicy: IfNotPresent
          name: orders
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders
      version: v4
    name: orders-v4
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders
        version: v4
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
          version: v4
      spec:
        serviceAccountName: sockshop-orders
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/orders:0.4.7
          imagePullPolicy: IfNotPresent
          name: orders
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: orders
      version: v5
    name: orders-v5
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: orders
        version: v5
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: orders
          version: v5
      spec:
        serviceAccountName: sockshop-orders
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/orders:0.4.7
          imagePullPolicy: IfNotPresent
          name: orders
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-orders
    labels:
      account: orders
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: orders
    name: orders
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: orders
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: payment
      version: v1
    name: payment
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: payment
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: payment
      spec:
        containers:
        - image: weaveworksdemos/payment:0.4.3
          imagePullPolicy: IfNotPresent
          name: payment
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: payment
    name: payment
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: payment
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: queue-master
      version: v1
    name: queue-master
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: queue-master
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: queue-master
      spec:
        serviceAccountName: sockshop-queue-master
        containers:
        - image: weaveworksdemos/queue-master:0.3.1
          imagePullPolicy: IfNotPresent
          name: queue-master
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-queue-master
    labels:
      account: queue-master
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/path: /prometheus
    creationTimestamp: null
    labels:
      name: queue-master
    name: queue-master
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: queue-master
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: rabbitmq
    name: rabbitmq
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: rabbitmq
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3.6.8
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: rabbitmq
    name: rabbitmq
    namespace: sockshop
  spec:
    ports:
    - port: 5672
      protocol: TCP
      targetPort: 5672
    selector:
      name: rabbitmq
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: shipping
      version: v1
    name: shipping
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: shipping
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: shipping
      spec:
        serviceAccountName: sockshop-shipping
        containers:
        - env:
          - name: ZIPKIN
            value: zipkin.jaeger.svc.cluster.local
          - name: JAVA_OPTS
            value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC
              -Djava.security.egd=file:/dev/urandom
          image: weaveworksdemos/shipping:0.4.8
          imagePullPolicy: IfNotPresent
          name: shipping
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-shipping
    labels:
      account: shipping
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: shipping
    name: shipping
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: shipping
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: user-db
    name: user-db
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: user-db
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: user-db
      spec:
        containers:
        - image: weaveworksdemos/user-db:0.4.0
          imagePullPolicy: IfNotPresent
          name: user-db
          ports:
          - containerPort: 27017
            name: mongo
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir:
            medium: Memory
          name: tmp-volume
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: user-db
    name: user-db
    namespace: sockshop
  spec:
    ports:
    - port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: user-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    labels:
      name: user
      version: v1
    name: user
    namespace: sockshop
  spec:
    progressDeadlineSeconds: 2147483647
    replicas: 1
    revisionHistoryLimit: 2147483647
    selector:
      matchLabels:
        name: user
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: user
      spec:
        serviceAccountName: sockshop-user
        containers:
        - env:
          - name: MONGO_HOST
            value: user-db:27017
          image: weaveworksdemos/user:0.4.7
          imagePullPolicy: IfNotPresent
          name: user
          ports:
          - containerPort: 80
            protocol: TCP
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status: {}
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sockshop-user
    labels:
      account: user
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      name: user
    name: user
    namespace: sockshop
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector:
      name: user
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
